sudo mongod --config /etc/mongod.conf
mongosh


Terminal:
Database lists: 
    show dbs

switch to:
    use DatabaseName
    e.g 
    use admin

Create collection:
    db.createCollection("students")

Shell Help:
    use     Set current database
    show    'show databases'/'show dbs': Print a list of all available databases.
            'show collections'/'show tables': Print a list of all collections for current database.
            'show profile': Prints system.profile information.
            'show users': Print a list of all users for current database.
            'show roles': Print a list of all roles for current database.
            'show log <type>': log for current connection, if type is not set uses 'global'
            'show logs': Print all logs.

    exit                    Quit the MongoDB shell with exit/exit()/.exit
    quit                    Quit the MongoDB shell with quit/quit()
    Mongo                   Create a new connection and return the Mongo object. Usage: new Mongo(URI, options [optional])
    connect                 Create a new connection and return the Database object. Usage: connect(URI, username [optional], password [optional])
    it                      result of the last line evaluated; use to further iterate
    version                 Shell version
    load                    Loads and runs a JavaScript file into the current shell environment
    enableTelemetry         Enables collection of anonymous usage data to improve the mongosh CLI
    disableTelemetry        Disables collection of anonymous usage data to improve the mongosh CLI
    passwordPrompt          Prompts the user for a password
    sleep                   Sleep for the specified number of milliseconds
    print                   Prints the contents of an object to the output
    printjson               Alias for print()
    convertShardKeyToHashed Returns the hashed value for the input using the same hashing function as a hashed index.
    cls                     Clears the screen like console.clear()
    isInteractive           Returns whether the shell will enter or has entered interactive mode

Delete current DataBase:
    1- use DataBaseName
    2- DataBaseName> db.dropDatabase()
    Result: DataBaseName deleted


Create a record:
    db.NameDataBase.insertOne({name: "Sina", surname: "LalehBakhsh"})

Create several records:
    db.NameDataBase.insertMany([{},{},{},{}])
    e.g:
        db.NameDataBase.insertMany([{name:"Sina", surname:"LalehBakhsh"},{name:"Jina", surname:"Mehrzad"},{name:"", surname:""},{name:"AnotherUserName", surname:"SurNameIsLaleh"}])

find:
    db.NameDataBase.find()



